@inject BlazorApp.Services.TokenProvider TokenProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <RedirectToLogin></RedirectToLogin>
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    [Parameter]
    public BlazorApp.Services.InitialApplicationState? InitialState { get; set; }

    protected override Task OnInitializedAsync()
    {
        if (InitialState == null)
        {
            throw new InvalidProgramException("You must pass param-InitialState to the App component");
        }

        TokenProvider.XsrfToken = InitialState.XsrfToken;
        TokenProvider.Cookie = InitialState.Cookie;

        return base.OnInitializedAsync();
    }
}