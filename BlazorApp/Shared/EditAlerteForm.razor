@using BlazorApp.Data
@inject BlazorDbContext Context

@if (Alerte != null) 
{
    <EditForm Model="@Alerte" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label for="title">Title:</label>
            <InputText id="title" class="form-control" @bind-Value="@Alerte.Title" />
            <ValidationMessage For="@(() => Alerte.Title)" />
        </div>

        <div class="form-group">
            <label for="description">Description:</label>
            <InputText id="description" class="form-control" @bind-Value="@Alerte.Description" />
            <ValidationMessage For="@(() => Alerte.Description)" />
        </div>

        <div class="form-group">
            <label for="keywords">Keywords:</label>
            <InputText id="keywords" class="form-control" @bind-Value="@Alerte.Keywords" />
            <ValidationMessage For="@(() => Alerte.Keywords)" />
        </div>

        <div class="form-group">
            <label for="removeKeywords">Remove Keywords:</label>
            <InputText id="removeKeywords" class="form-control" @bind-Value="@Alerte.RemoveKeywords" />
            <ValidationMessage For="@(() => Alerte.RemoveKeywords)" />
        </div>

        <div class="form-group">
            <label for="ownerId">Email To:</label>
            <InputText id="ownerId" class="form-control" @bind-Value="@Alerte.SendTo" />
            <ValidationMessage For="@(() => Alerte.SendTo)" />
        </div>

        <div class="form-group">
            <label for="ownerSubId">Text To:</label>
            <InputText id="ownerSubId" class="form-control" @bind-Value="@Alerte.TextTo" />
            <ValidationMessage For="@(() => Alerte.TextTo)" />
        </div>

        <div class="form-group">
            <label for="externalOwnerId">External Owner Id:</label>
            <InputText id="externalOwnerId" class="form-control" @bind-Value="@Alerte.ExternalOwnerId" />
            <ValidationMessage For="@(() => Alerte.ExternalOwnerId)" />
        </div>

        <div class="form-group">
            <label for="externalOwnerSubId">External Owner Sub Id:</label>
            <InputText id="externalOwnerSubId" class="form-control" @bind-Value="@Alerte.ExternalOwnerSubId" />
            <ValidationMessage For="@(() => Alerte.ExternalOwnerSubId)" />
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>

    </EditForm>
}

@code {
    [Parameter]
    public Alerte? Alerte { get; set; }

    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    private async Task HandleValidSubmit()
    {
        if (Alerte == null) 
        {
            return;
        }

        if (Alerte.Id == 0)
        {
            await Context.Alertes.AddAsync(Alerte);
        }
        else
        {
            Context.Alertes.Update(Alerte);
        }

        await Context.SaveChangesAsync();

        await OnValidSubmit.InvokeAsync();
    }
}