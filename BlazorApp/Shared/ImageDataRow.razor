@inject UrlService urlService

<tr id="imageinfo-@imageInfo.Id">
    <td class="">@imageInfo.Id</td>
    <td>@FormatDateTime(imageInfo.DateEmail)</td>
    <td class="">@imageInfo.ImageAnalysis?.Description.Captions.Select(a => $"{a.Text} ({a.Confidence * 100}%)").DefaultIfEmpty(string.Empty).Aggregate((a, b) => string.Concat(a, ", ", b))</td>
    <td class="">@imageInfo.ImageAnalysis?.Description.Tags.DefaultIfEmpty(string.Empty).Aggregate((a, b) => string.Concat(a, ", ", b))</td>
    <td>
        <img id="@string.Concat("image-id-", imageInfo.Id)" src="data:image/png;base64,@Convert.ToBase64String(imageInfo?.Images ?? Array.Empty<byte>())" class="img-thumbnail trigger-modal" onclick="window.showImageModal('@string.Concat("image-id-", imageInfo.Id)')" />
    </td>
    <td>
       <NavLink class="btn btn-primary" href="@urlService.Url($"/imageanalysisdetails/{imageInfo.Id}")">
           Details
       </NavLink>
       <button @onclick="@(() => ConfirmDelete?.Invoke(id, title))" class="btn btn-danger">Delete</button>
    </td>
</tr>

@code {
    public long id => imageInfo.Id;
    public string title => "Delete image info " + id;

    [Parameter]
    public Data.ImageInfo imageInfo { get; set; } = new Data.NullImageInfo();

    [Parameter]
    public Action<long, string>? ConfirmDelete { get; set; }

    public string FormatDateTime(DateTimeOffset? date)
    {
        if (date is null)
        {
            return "Aucune date disponible";
        }

        var now = DateTimeOffset.Now;

        if (date.HasValue && date.Value.Day == now.Day)
        {
            return date.Value.ToString("HH:mm:ss");
        }

        return date.Value.ToString("yyyy-MM-dd HH:mm:ss");
    }
} 