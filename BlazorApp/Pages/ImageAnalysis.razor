@page "/imageanalysis"

@inject ImageInfoService ImageInfoService
@inject IJSRuntime JS
@inject IdleClient idleClient

<h1>Image Analysis</h1>

<p>Here you can manage and look at the data.</p>

<div class="form-group">
    <input @bind="SearchTerms" />
    <button class="btn btn-primary" @onclick="TriggerSearch">Search</button>
</div>



<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Date</th>
            <th>Dominant colors</th>
            <th>Categories</th>
            <th>Caption</th>
            <th>Tags</th>
            <th>Image</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (imageInfo == null)
        {
            <tr>
                <td><em>Loading...</em></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
        }
        else
        {
            @foreach (var imageData in imageInfo)
            {
                <ImageDataRow @key="imageData.Id" imageInfo="imageData" ConfirmDelete="ConfirmDelete" />
            }
        }
    </tbody>
</table>

<div class="modal" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Confirm delete</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <input type="hidden" id="bookToDeleteField" @bind=@DeleteId />
                Are you sure you want to delete book <span id="bookTitleField"></span>?
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" @onclick="DeleteImageInfo">Delete</button>
            </div>

        </div>
    </div>
</div>

@code {
    private IList<ImageInfo>? imageInfo;

    private int DeleteId;

    private int skip = 0;

    protected string? SearchTerms { get; set; }

    protected override async Task OnInitializedAsync()
    {
        imageInfo = (await ImageInfoService.GetImageInfo(take: 15, skip: skip, SearchTerms)).ToList();

        //idleClient.OnMessageRecieved = () =>
        //{
        //    try
        //    {
        //        StateHasChanged();
        //    }
        //    catch (Exception? e)
        //    {
        //        do
        //        {
        //            Console.Error.WriteLine(e.Message);
        //            Console.Error.WriteLine(e.StackTrace);

        //            e = e.InnerException;
        //        } while (e != null);
        //    }
        //};
    }

    protected void ConfirmDelete(int id, string title)
    {
        DeleteId = id;

        JS.InvokeAsync<bool>("confirmDelete", title);
    }

    protected async Task DeleteImageInfo()
    {
        await JS.InvokeAsync<bool>("hideDeleteDialog");

        ImageInfoService.DeleteImageInfo(DeleteId);
        await OnInitializedAsync();
    }

    protected async Task TriggerSearch()
    {
        imageInfo = null;

        imageInfo = (await ImageInfoService.GetImageInfo(take: 15, skip: skip, SearchTerms)).ToList();
    }
}
